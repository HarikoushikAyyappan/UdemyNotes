14/02/23

Spring Form Validations

Form Validation using HTML:

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User form</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
<h4>Submit your information</h4>
<hr>
	<form:form action="displayUserInfo" modelAttribute="user">
Name: <form:input path="name" required="true" placeholder="Enter name"/>
		<p />
Gender: <form:radiobuttons path="gender" items="${genderMap}" required="true" />
		<p />

Country: <form:select path="country" items="${countryMap}" />
		<p />
Introduction:
        <form:textarea path="introduction" required="true"/>
		<p />
Visited countries:
        China: <form:checkbox path="visitedCountries" value="China"/>
        Taiwan:   <form:checkbox path="visitedCountries" value="Taiwan" />
        Germany     <form:checkbox path="visitedCountries" value="Germany" />
        Bhutan       <form:checkbox path="visitedCountries" value="Bhutan" />

		<p />
		Accept agreement: <form:checkbox path="" value="accept" required="true"/>
		<p/>
		<input type="submit" value="Submit">
	</form:form>
</body>
</html>

required ='true' makes a field mandatory and placeholder="" shows some value before clicking on the blank field.


Hibernate Validator Introduction:

Hibernate validator dependency has to be downloaded from the mvn repository.

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;
import org.studyeasy.model.User;

@Controller
public class MainController {

	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView modelAndView = new ModelAndView("userFormView");
		User user = new User();
		Map<String,String> genderMap = new HashMap<String, String>();
		genderMap.put("male", "Male");
		genderMap.put("female", "Female");

		Map<String,String> countryMap = new HashMap<String, String>();
		countryMap.put("India", "India");
		countryMap.put("USA", "The United states");
		countryMap.put("Ireland", "Ireland");
		countryMap.put("Thailand", "Thailand");

		modelAndView.addObject("countryMap", countryMap);
		modelAndView.addObject("genderMap",genderMap);
		modelAndView.addObject("user",user);
		return modelAndView;
	}

	@PostMapping("/displayUserInfo")
	public ModelAndView displayUserInfo(@Valid User user, BindingResult result) {
		ModelAndView modelAndView = new ModelAndView("displayUserInfo");
		modelAndView.addObject("user",user);
		if(result.hasErrors()) {
			System.out.println("Has errors!!");
		}
		return modelAndView;

	}

Model class:

import java.util.Arrays;

import javax.validation.constraints.Size;

public class User {
	@Size(min = 5, max = 10)
	private String name;
	private String gender,country,introduction,visitedCountries[];


	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}


	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getIntroduction() {
		return introduction;
	}

	public void setIntroduction(String introduction) {
		this.introduction = introduction;
	}

	public String[] getVisitedCountries() {
		return visitedCountries;
	}

	public void setVisitedCountries(String[] visitedCountries) {
		this.visitedCountries = visitedCountries;
	}

	@Override
	public String toString() {
		return "User [name=" + name + ", gender=" + gender + ", country=" + country + ", introduction=" + introduction
				+ ", visitedCountries=" + Arrays.toString(visitedCountries) + "]";
	}

}

Remaining USerformview.jsp page and DisplayUserInfo.jsp are same as the previous notes.



Repopulating formData:

while entering details in the form,if there is any error,we can make the form to not get submitted and display the form again

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;
import org.studyeasy.model.User;

@Controller
public class MainController {

	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView modelAndView = new ModelAndView("userFormView");
		User user = new User();
		Map<String, String> genderMap = new HashMap<String, String>();
		genderMap.put("male", "Male");
		genderMap.put("female", "Female");

		Map<String, String> countryMap = new HashMap<String, String>();
		countryMap.put("India", "India");
		countryMap.put("USA", "The United states");
		countryMap.put("Ireland", "Ireland");
		countryMap.put("Thailand", "Thailand");

		modelAndView.addObject("countryMap", countryMap);
		modelAndView.addObject("genderMap", genderMap);
		modelAndView.addObject("user", user);
		return modelAndView;
	}

	@PostMapping("/displayUserInfo")
	public ModelAndView displayUserInfo(@Valid User user, BindingResult result) {
		ModelAndView modelAndView = new ModelAndView("displayUserInfo");
		modelAndView.addObject("user", user);
		if (result.hasErrors()) {
			ModelAndView repopulatingModelAndView = new ModelAndView("userFormView");
			Map<String, String> genderMap = new HashMap<String, String>();
			genderMap.put("male", "Male");
			genderMap.put("female", "Female");

			Map<String, String> countryMap = new HashMap<String, String>();
			countryMap.put("India", "India");
			countryMap.put("USA", "The United states");
			countryMap.put("Ireland", "Ireland");
			countryMap.put("Thailand", "Thailand");

			repopulatingModelAndView.addObject("countryMap", countryMap);
			repopulatingModelAndView.addObject("genderMap", genderMap);
			repopulatingModelAndView.addObject("user", user);
			System.out.println("Has errors");
			return repopulatingModelAndView;

		} else {
			System.out.println("All good!");
			return modelAndView;
		}

	}

}

UserFormView.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User form</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
<h4>Submit your information</h4>
<hr>
	<form:form action="displayUserInfo" modelAttribute="user">
Name: <form:input path="name" required="true" placeholder="Enter name"/>
		<p />
Gender: <form:radiobuttons path="gender" items="${genderMap}" required="true" />
		<p />

Country: <form:select path="country" items="${countryMap}" />
		<p />
Introduction:
        <form:textarea path="introduction" required="true"/>
		<p />
Visited countries:
        China: <form:checkbox path="visitedCountries" value="China"/>
        Taiwan:   <form:checkbox path="visitedCountries" value="Taiwan" />
        Germany     <form:checkbox path="visitedCountries" value="Germany" />
        Bhutan       <form:checkbox path="visitedCountries" value="Bhutan" />

		<p />
		Accept agreement: <form:checkbox path="" value="accept" required="true"/>
		<p/>
		<input type="submit" value="Submit">
	</form:form>
</body>
</html>

DisplayUserInfo.jsp:

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User info</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
Name: ${user.name}<p/>
Gender: ${user.gender}<p/>
Country: ${user.country}<p/>
Introduction: ${user.introduction}<p/>
Visited Countries:
<ul>
<c:forEach items="${user.visitedCountries}" var="item">
<li>${item}</li>
</c:forEach>
</ul>
</body>
</html

ModelMap-Simplifying controller

When we are coding with Dropdown list,check boxes etc if it is static content we have to code it in the file.If Dynamic
Content ie) if we have to get from the database,we have to populate it from the controller.

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;
import org.studyeasy.model.User;

@Controller
public class MainController {

	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView modelAndView = new ModelAndView("userFormView");
		User user = new User();
		modelAndView.addObject("user", user);
		return modelAndView;
	}

	@PostMapping("/displayUserInfo")
	public ModelAndView displayUserInfo(@Valid User user, BindingResult result) {
		ModelAndView modelAndView = new ModelAndView("displayUserInfo");
		modelAndView.addObject("user", user);
		if (result.hasErrors()) {
			ModelAndView repopulatingModelAndView = new ModelAndView("userFormView");
			repopulatingModelAndView.addObject("user", user);
			System.out.println("Has errors");
			return repopulatingModelAndView;

		} else {
			System.out.println("All good!");
			return modelAndView;
		}

	}

}

displayUserInfo.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User info</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
Name: ${user.name}<p/>
Gender: ${user.gender}<p/>
Country: ${user.country}<p/>
Introduction: ${user.introduction}<p/>
Visited Countries:
<ul>
<c:forEach items="${user.visitedCountries}" var="item">
<li>${item}</li>
</c:forEach>
</ul>
</body>
</html>


UserFoemView.jsp:
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User form</title>
<link type="text/css" rel="stylesheet"
	href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
	<h4>Submit your information</h4>
	<hr>
	<form:form action="displayUserInfo" modelAttribute="user">
Name: <form:input path="name" required="true" placeholder="Enter name" />
		<p />
Gender: Male: <form:radiobutton path="gender" value="Male"
			required="true" />
        Female: <form:radiobutton path="gender" value="female"
			required="true" />
		<p />

Country: <form:select path="country">
			<form:option value="India"></form:option>
			<form:option value="USA" label="The United states"></form:option>
			<form:option value="Ireland"></form:option>
			<form:option value="Thailand"></form:option>
		</form:select>

		<p />
Introduction:
        <form:textarea path="introduction" required="true" />
		<p />
Visited countries:
        China: <form:checkbox path="visitedCountries" value="China" />
        Taiwan:   <form:checkbox path="visitedCountries" value="Taiwan" />
        Germany     <form:checkbox path="visitedCountries"
			value="Germany" />
        Bhutan       <form:checkbox path="visitedCountries"
			value="Bhutan" />

		<p />
		Accept agreement: <form:checkbox path="" value="accept"
			required="true" />
		<p />
		<input type="submit" value="Submit">
	</form:form>
</body>
</html>
-------------------------------------------------------------------------------------------

Showing Error Messages:

We can customize the error by coding as below,

import java.util.Arrays;

import javax.validation.constraints.Size;

public class User {
	@Size(min = 5, max = 10, message = "Enter the name between 5 to 10 characters")
	private String name;
	private String gender,country,introduction,visitedCountries[];


	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}


	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getIntroduction() {
		return introduction;
	}

	public void setIntroduction(String introduction) {
		this.introduction = introduction;
	}

	public String[] getVisitedCountries() {
		return visitedCountries;
	}

	public void setVisitedCountries(String[] visitedCountries) {
		this.visitedCountries = visitedCountries;
	}

	@Override
	public String toString() {
		return "User [name=" + name + ", gender=" + gender + ", country=" + country + ", introduction=" + introduction
				+ ", visitedCountries=" + Arrays.toString(visitedCountries) + "]";
	}

}

The Controller part is,

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;
import org.studyeasy.model.User;

@Controller
public class MainController {

	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView modelAndView = new ModelAndView("userFormView");
		User user = new User();
		modelAndView.addObject("user", user);
		return modelAndView;
	}

	@PostMapping("/displayUserInfo")
	public ModelAndView displayUserInfo(@ModelAttribute("user") @Valid User user, BindingResult result) {
		ModelAndView modelAndView = new ModelAndView("displayUserInfo");
		modelAndView.addObject("user", user);
		if (result.hasErrors()) {
			ModelAndView repopulatingModelAndView = new ModelAndView("userFormView");
			repopulatingModelAndView.addObject("user", user);
			System.out.println("Has errors");
			return repopulatingModelAndView;

		} else {
			System.out.println("All good!");
			return modelAndView;
		}

	}

}

displayUserInfo.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User info</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
Name: ${user.name}<p/>
Gender: ${user.gender}<p/>
Country: ${user.country}<p/>
Introduction: ${user.introduction}<p/>
Visited Countries:
<ul>
<c:forEach items="${user.visitedCountries}" var="item">
<li>${item}</li>
</c:forEach>
</ul>
</body>
</html>

UserFormVIew.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User form</title>
<link type="text/css" rel="stylesheet"
	href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
	<h4>Submit your information</h4>
	<hr>
	<form:form action="displayUserInfo" modelAttribute="user">
Name: <form:input path="name" required="true" placeholder="Enter name" />
		<p />
		<form:errors path="name" cssStyle="color:red" />
		<p />
Gender: Male: <form:radiobutton path="gender" value="Male"
			required="true" />
        Female: <form:radiobutton path="gender" value="female"
			required="true" />
		<p />

Country: <form:select path="country">
			<form:option value="India"></form:option>
			<form:option value="USA" label="The United states"></form:option>
			<form:option value="Ireland"></form:option>
			<form:option value="Thailand"></form:option>
		</form:select>

		<p />
Introduction:
        <form:textarea path="introduction" required="true" />
		<p />
Visited countries:
        China: <form:checkbox path="visitedCountries" value="China" />
        Taiwan:   <form:checkbox path="visitedCountries" value="Taiwan" />
        Germany     <form:checkbox path="visitedCountries"
			value="Germany" />
        Bhutan       <form:checkbox path="visitedCountries"
			value="Bhutan" />

		<p />
		<input type="submit" value="Submit">
	</form:form>
</body>
</html>

---------------------------------------------------------------------------------------------

ValidationRules:

Typing javax.validation.constraints in internet gives all the rules which provide a simple way to perform fprm validations
using annotations.

AN example is given,

import java.util.Arrays;

import javax.validation.constraints.Email;
import javax.validation.constraints.Size;

public class User {
	@Size(min = 5, max = 10, message = "Enter the name between 5 to 10 characters")
	private String name;
	private String gender;
	private String country;
	@Email
	private String introduction;
	private String visitedCountries[];


	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}


	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getIntroduction() {
		return introduction;
	}

	public void setIntroduction(String introduction) {
		this.introduction = introduction;
	}

	public String[] getVisitedCountries() {
		return visitedCountries;
	}

	public void setVisitedCountries(String[] visitedCountries) {
		this.visitedCountries = visitedCountries;
	}

	@Override
	public String toString() {
		return "User [name=" + name + ", gender=" + gender + ", country=" + country + ", introduction=" + introduction
				+ ", visitedCountries=" + Arrays.toString(visitedCountries) + "]";
	}

}

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.ModelAndView;
import org.studyeasy.model.User;

@Controller
public class MainController {

	@GetMapping("/")
	public ModelAndView home() {
		ModelAndView modelAndView = new ModelAndView("userFormView");
		User user = new User();
		modelAndView.addObject("user", user);
		return modelAndView;
	}

	@PostMapping("/displayUserInfo")
	public ModelAndView displayUserInfo(@ModelAttribute("user") @Valid User user, BindingResult result) {
		ModelAndView modelAndView = new ModelAndView("displayUserInfo");
		modelAndView.addObject("user", user);
		if (result.hasErrors()) {
			ModelAndView repopulatingModelAndView = new ModelAndView("userFormView");
			repopulatingModelAndView.addObject("user", user);
			System.out.println("Has errors");
			return repopulatingModelAndView;

		} else {
			System.out.println("All good!");
			return modelAndView;
		}

	}

}
displayUserInfo.jsp
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User info</title>
<link type="text/css" rel="stylesheet" href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
Name: ${user.name}<p/>
Gender: ${user.gender}<p/>
Country: ${user.country}<p/>
Introduction: ${user.introduction}<p/>
Visited Countries:
<ul>
<c:forEach items="${user.visitedCountries}" var="item">
<li>${item}</li>
</c:forEach>
</ul>
</body>
</html>

UserFormView.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>User form</title>
<link type="text/css" rel="stylesheet"
	href="${pageContext.request.contextPath}/files/css/style.css">
</head>
<body>
	<h4>Submit your information</h4>
	<hr>
	<form:form action="displayUserInfo" modelAttribute="user">
Name: <form:input path="name" required="true" placeholder="Enter name" />
		<p />
		<form:errors path="name" cssStyle="color:red" />
		<p />
Gender: Male: <form:radiobutton path="gender" value="Male"
			required="true" />
        Female: <form:radiobutton path="gender" value="female"
			required="true" />
		<p />

Country: <form:select path="country">
			<form:option value="India"></form:option>
			<form:option value="USA" label="The United states"></form:option>
			<form:option value="Ireland"></form:option>
			<form:option value="Thailand"></form:option>
		</form:select>

		<p />
Introduction:
        <form:textarea path="introduction" required="true" />
        <p />
		<form:errors path="introduction" cssStyle="color:red" />
		<p />
Visited countries:
        China: <form:checkbox path="visitedCountries" value="China" />
        Taiwan:   <form:checkbox path="visitedCountries" value="Taiwan" />
        Germany     <form:checkbox path="visitedCountries"
			value="Germany" />
        Bhutan       <form:checkbox path="visitedCountries"
			value="Bhutan" />

		<p />
		<input type="submit" value="Submit">
	</form:form>
</body>
</html>





